#include <time.h>
#include <stdio.h>
#include <stdlib.h>
#include <stdbool.h>

/*Teste com o c처digo da quest찾o 14
int comp (const void * n1, const void * n2)
{
  return (*(int*)n1 - *(int*)n2);
}

void main() {
    int n, cont = 0;
    int *array;
    clock_t tempoInicial, tempoFinal;
    double tempo;

    printf("Digite a quantidade de valores: ");
    scanf("%d", &n);
    array = malloc(n * sizeof(int));

    for (int i = 0; i < n; i++) {
        scanf("%d", &array[i]);

    }

    tempoInicial = clock();
    qsort (array, n, sizeof(int), comp);
    tempoFinal = clock();

    //Exibe os valores do array.
    for (int i = 0; i < n; i++) {
        printf("%do valor: %d\n", i+1, array[i]);
    }

    tempo = (double)(tempoFinal-tempoInicial)/(CLOCKS_PER_SEC);

    printf("O tempo utilizado foi de: %lf\n", tempo);

    free(array);
}
*/

//Teste com o c처digo da quest찾o 15

bool compare (int n1, int n2) {
    bool maior;

    if(n1 > n2){
        maior = true;
    }
    else{
        maior = false;
    }

    return maior;
}


void ordenacao(int *array, int n, int (*funcao)(int, int)){
    int i, j, aux;

    for(i = 0; i < n; i++){
        for(j = 0; j < n; j++){
            if(compare(array[i],array[j]) == false){
                aux = array[i];
                array[i] = array[j];
                array[j] = aux;
            }
        }
    }
}

void main() {
    int n, i;
    clock_t tempoInicial, tempoFinal;
    double tempo;

    printf("Digite a quantidade de valores: ");
    scanf("%d", &n);

    int *vetor = (int*)malloc(n * sizeof(int));

    for (i = 0; i < n; i++) {
        scanf("%d", &vetor[i]);
    }

    printf("\n");

    tempoInicial = clock();
    ordenacao(vetor, n, compare);
    tempoFinal = clock();

    for (i = 0; i < n; i++) {
        printf("%do valor: %d\n", i+1, vetor[i]);
    }

    tempo = (double)(tempoFinal-tempoInicial)/(CLOCKS_PER_SEC);

    printf("O tempo utilizado foi de: %lf\n", tempo);

    free(vetor);

    return 0;
}

